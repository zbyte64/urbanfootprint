# Generated by Django 5.0.7 on 2024-08-06 02:01

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import footprint.main.mixins.analysis_modules
import footprint.main.mixins.config_entity_related_collection_adoption
import footprint.main.mixins.dynamic
import footprint.main.mixins.related_collection_adoption
import footprint.main.mixins.revisionable
import footprint.main.models.analysis.building_performance
import footprint.main.models.config.policy
import picklefield.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgricultureAttributeSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_yield', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('unit_price', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('water_consumption', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('labor_input', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('truck_trips', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('seed_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('chemical_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('fertilizer_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('custom_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('contract_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('irrigation_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('labor_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('equipment_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('fuel_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('other_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('feed_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('pasture_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('land_rent_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('other_cash_costs', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('land_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('establishment_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('other_noncash_costs', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('updater', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='analysis_tool_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120)),
                ('scope', models.CharField(max_length=120)),
                ('attribute_keys', picklefield.fields.PickledObjectField(default=[], editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Intersection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree', picklefield.fields.PickledObjectField(default=None, editable=False, null=True)),
                ('is_template', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingAttributeSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('website', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('vacancy_rate', models.DecimalField(decimal_places=3, default=0, max_digits=4)),
                ('household_size', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('lot_size_square_feet', models.DecimalField(decimal_places=7, default=0, max_digits=14)),
                ('floors', models.DecimalField(decimal_places=4, default=0, max_digits=7)),
                ('total_far', models.DecimalField(decimal_places=7, default=0, max_digits=10)),
                ('surface_parking_spaces', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('above_ground_structured_parking_spaces', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('below_ground_structured_parking_spaces', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('average_parking_space_square_feet', models.DecimalField(decimal_places=4, default=0, max_digits=14, null=True)),
                ('surface_parking_square_feet', models.DecimalField(decimal_places=4, default=0, max_digits=14, null=True)),
                ('building_footprint_square_feet', models.DecimalField(decimal_places=4, default=0, max_digits=14, null=True)),
                ('hardscape_other_square_feet', models.DecimalField(decimal_places=4, default=0, max_digits=14, null=True)),
                ('irrigated_softscape_square_feet', models.DecimalField(decimal_places=3, default=0, max_digits=14, null=True)),
                ('nonirrigated_softscape_square_feet', models.DecimalField(decimal_places=3, default=0, max_digits=14)),
                ('irrigated_percent', models.DecimalField(decimal_places=10, default=0, max_digits=14)),
                ('residential_irrigated_square_feet', models.DecimalField(decimal_places=2, default=0, max_digits=9, null=True)),
                ('commercial_irrigated_square_feet', models.DecimalField(decimal_places=2, default=0, max_digits=9, null=True)),
                ('gross_net_ratio', models.DecimalField(decimal_places=7, default=1, max_digits=14)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingUseDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BuiltForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('medium_context', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='built_form_creator', to=settings.AUTH_USER_MODEL)),
                ('origin_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.builtform')),
                ('updater', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='built_form_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltFormExample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('url_aerial', models.CharField(blank=True, max_length=200, null=True)),
                ('url_street', models.CharField(blank=True, max_length=200, null=True)),
                ('content', picklefield.fields.PickledObjectField(editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'media',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CommercialEnergyBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.IntegerField()),
                ('retail_services_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('restaurant_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('accommodation_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('arts_entertainment_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('other_services_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('office_services_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('public_admin_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('education_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('medical_services_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('transport_warehousing_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('wholesale_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('retail_services_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('restaurant_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('accommodation_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('arts_entertainment_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('other_services_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('office_services_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('public_admin_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('education_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('medical_services_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('transport_warehousing_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('wholesale_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('group_permission_configuration', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('key', models.CharField(max_length=120)),
                ('scope', models.CharField(max_length=120)),
                ('bounds', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('import_key', models.CharField(max_length=64, null=True)),
                ('setup_percent_complete', models.IntegerField(default=100)),
            ],
            options={
                'abstract': False,
            },
            bases=(footprint.main.mixins.config_entity_related_collection_adoption.ConfigEntityRelatedCollectionAdoption, footprint.main.mixins.related_collection_adoption.RelatedCollectionAdoption, footprint.main.mixins.analysis_modules.AnalysisModules, models.Model),
        ),
        migrations.CreateModel(
            name='EvapotranspirationBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.IntegerField()),
                ('annual_evapotranspiration', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlatBuiltForm',
            fields=[
                ('built_form_id', models.IntegerField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=120)),
                ('name', models.CharField(max_length=100)),
                ('built_form_type', models.CharField(max_length=50)),
                ('gross_net_ratio', models.DecimalField(decimal_places=10, default=0, max_digits=11)),
                ('intersection_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_mixed_use', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_residential', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_employment', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('dwelling_unit_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('household_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('population_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('employment_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('single_family_large_lot_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('single_family_small_lot_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('attached_single_family_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('multifamily_2_to_4_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('multifamily_5_plus_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('office_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('public_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('retail_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('industrial_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('agricultural_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('military_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('retail_services_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('restaurant_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('arts_entertainment_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('accommodation_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('other_services_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('office_services_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('public_admin_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('education_services_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('medical_services_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('manufacturing_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('wholesale_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('transport_warehouse_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('construction_utilities_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('agriculture_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('extraction_density', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_residential_single_family_small_lot', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_residential_single_family_large_lot', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_residential_attached_single_family', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_residential_multifamily', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_employment_office', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_employment_public', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_employment_retail', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_employment_industrial', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('acres_parcel_employment_agriculture', models.DecimalField(decimal_places=10, default=0, max_digits=15)),
                ('building_sqft_total', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_detached_single_family', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_single_family_small_lot', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_single_family_large_lot', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_attached_single_family', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_multifamily_2_to_4', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_multifamily_5_plus', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_retail_services', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_restaurant', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_accommodation', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_arts_entertainment', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_other_services', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_office_services', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_public_admin', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_education_services', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_medical_services', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_wholesale', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_transport_warehouse', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('building_sqft_industrial_non_warehouse', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('residential_irrigated_square_feet', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('commercial_irrigated_square_feet', models.DecimalField(decimal_places=7, default=0, max_digits=15)),
                ('softscape_and_landscape_percent', models.DecimalField(decimal_places=7, max_digits=15, null=True)),
                ('irrigated_percent', models.DecimalField(decimal_places=7, default=0, max_digits=15, null=True)),
                ('percent_streets', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('percent_parks', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('percent_civic', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('percent_mixed_use', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('percent_residential', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('percent_employment', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('pt_density', models.IntegerField(null=True)),
                ('pt_connectivity', models.IntegerField(null=True)),
                ('pt_land_use_mix', models.IntegerField(null=True)),
                ('pt_score', models.IntegerField(null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('intersections_sqmi', models.IntegerField(null=True)),
                ('avg_estimated_building_height_feet', models.IntegerField(null=True)),
                ('building_avg_number_of_floors', models.IntegerField(null=True)),
                ('block_avg_size_acres', models.IntegerField(null=True)),
                ('street_pattern', models.CharField(max_length=100, null=True)),
                ('combined_pop_emp_density', models.DecimalField(decimal_places=4, default=0, max_digits=14, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GridCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('source_table_id', models.IntegerField(db_index=True)),
                ('source_id', models.IntegerField(db_index=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JoinType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PresentationMedium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('visible_attributes', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('configuration', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('rendered_medium', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='presentation_medium_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'presentation_media',
            },
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('key', models.CharField(max_length=120)),
                ('scope', models.CharField(max_length=120)),
                ('configuration', picklefield.fields.PickledObjectField(editable=False, null=True)),
            ],
            bases=(models.Model, footprint.main.mixins.related_collection_adoption.RelatedCollectionAdoption),
        ),
        migrations.CreateModel(
            name='Medium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('content_type', models.CharField(blank=True, max_length=20, null=True)),
                ('content', picklefield.fields.PickledObjectField(editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'media',
            },
        ),
        migrations.CreateModel(
            name='Parcel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wkb_geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
            ],
            bases=(models.Model, footprint.main.mixins.revisionable.Revisionable, footprint.main.mixins.dynamic.Dynamic),
        ),
        migrations.CreateModel(
            name='PGNamespace',
            fields=[
                ('nspname', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'pg_namespace',
            },
        ),
        migrations.CreateModel(
            name='PlacetypeComponentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('contributes_to_net', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PresentationConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('key', models.CharField(max_length=120)),
                ('scope', models.CharField(max_length=120)),
                ('data', picklefield.fields.PickledObjectField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='PublicHealthOutcomeAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=5)),
                ('csv_path', models.CharField(max_length=200)),
                ('group', models.IntegerField()),
                ('type', models.CharField(max_length=15)),
                ('duan', models.FloatField(default=1)),
                ('age_group', models.CharField(max_length=10)),
                ('income_group', models.CharField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResidentialEnergyBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.IntegerField()),
                ('du_detsf_ll_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_detsf_sl_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_attsf_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_mf_electricity', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_detsf_ll_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_detsf_sl_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_attsf_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('du_mf_gas', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SortType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('order_by', models.CharField(default=None, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SouthMigrationHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app_name', models.CharField(max_length=100)),
                ('migration', models.CharField(max_length=100)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'south_migrationhistory',
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('proj4text', models.CharField(max_length=2048)),
                ('srtext', models.CharField(max_length=2048)),
                ('auth_srid', models.IntegerField()),
                ('auth_name', models.CharField(max_length=2048)),
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
            },
        ),
        migrations.CreateModel(
            name='StreetAttributeSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lane_width', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('number_of_lanes', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('block_size', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('identifier', models.TextField()),
                ('target', models.TextField()),
                ('style_property', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StyleAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('attribute', models.CharField(blank=True, max_length=200, null=True)),
                ('style_type', models.CharField(blank=True, max_length=40, null=True)),
                ('opacity', models.FloatField(default=1)),
                ('style_value_contexts', picklefield.fields.PickledObjectField(default=[], editable=False)),
                ('visible', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Taz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('source_table_id', models.IntegerField(db_index=True)),
                ('source_id', models.IntegerField(db_index=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AgricultureUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='EnergyUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool', footprint.main.models.analysis.building_performance.BuildingPerformance),
        ),
        migrations.CreateModel(
            name='EnvironmentalConstraintUnionTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='FiscalUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='PublicHealthUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='ScenarioUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='VmtUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='WaterUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool', footprint.main.models.analysis.building_performance.BuildingPerformance),
        ),
        migrations.CreateModel(
            name='AttributeGroupConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_permission_configuration', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('attribute_mapping', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('attribute_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.attributegroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeIntersection',
            fields=[
                ('intersection_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.intersection')),
                ('from_attribute', models.CharField(max_length=50, null=True)),
                ('to_attribute', models.CharField(max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('main.intersection',),
        ),
        migrations.CreateModel(
            name='GeographicIntersection',
            fields=[
                ('intersection_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.intersection')),
                ('from_geography', models.CharField(max_length=50, null=True)),
                ('to_geography', models.CharField(max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('main.intersection',),
        ),
        migrations.AddField(
            model_name='attributegroup',
            name='attribute_permissions',
            field=models.ManyToManyField(to='main.attributepermission'),
        ),
        migrations.CreateModel(
            name='Behavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('abstract', models.BooleanField(default=False)),
                ('readonly', models.BooleanField(default=False)),
                ('intersection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.intersection')),
                ('parents', models.ManyToManyField(to='main.behavior')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='analysistool',
            name='behavior',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.behavior'),
        ),
        migrations.CreateModel(
            name='BuildingUsePercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=20, default=0, max_digits=21)),
                ('efficiency', models.DecimalField(decimal_places=4, default=0.85, max_digits=6)),
                ('square_feet_per_unit', models.DecimalField(decimal_places=3, max_digits=11, null=True)),
                ('floor_area_ratio', models.DecimalField(decimal_places=10, max_digits=12, null=True)),
                ('unit_density', models.DecimalField(decimal_places=10, max_digits=16, null=True)),
                ('gross_built_up_area', models.DecimalField(decimal_places=3, max_digits=13, null=True)),
                ('net_built_up_area', models.DecimalField(decimal_places=3, max_digits=13, null=True)),
                ('building_attribute_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.buildingattributeset')),
                ('building_use_definition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.buildingusedefinition')),
            ],
        ),
        migrations.AddField(
            model_name='buildingattributeset',
            name='building_uses',
            field=models.ManyToManyField(through='main.BuildingUsePercent', to='main.buildingusedefinition'),
        ),
        migrations.CreateModel(
            name='Placetype',
            fields=[
                ('builtform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.builtform')),
            ],
            options={
                'verbose_name_plural': 'Place Types',
                'abstract': False,
            },
            bases=('main.builtform',),
        ),
        migrations.CreateModel(
            name='PlacetypeComponent',
            fields=[
                ('builtform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.builtform')),
                ('component_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.placetypecomponentcategory')),
            ],
            bases=('main.builtform', models.Model),
        ),
        migrations.CreateModel(
            name='PrimaryComponent',
            fields=[
                ('builtform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.builtform')),
            ],
            bases=('main.builtform',),
        ),
        migrations.AddField(
            model_name='builtform',
            name='examples',
            field=models.ManyToManyField(null=True, to='main.builtformexample'),
        ),
        migrations.CreateModel(
            name='BuiltFormSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('built_forms', models.ManyToManyField(to='main.builtform')),
            ],
        ),
        migrations.CreateModel(
            name='GlobalConfig',
            fields=[
                ('configentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.configentity')),
            ],
            bases=('main.configentity',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('configentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.configentity')),
                ('base_year', models.IntegerField(default=2005)),
            ],
            bases=('main.configentity',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('configentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.configentity')),
            ],
            bases=('main.configentity',),
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('configentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.configentity')),
                ('year', models.IntegerField()),
            ],
            bases=('main.configentity',),
        ),
        migrations.AddField(
            model_name='configentity',
            name='behavior',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.behavior'),
        ),
        migrations.AddField(
            model_name='configentity',
            name='built_form_sets',
            field=models.ManyToManyField(to='main.builtformset'),
        ),
        migrations.AddField(
            model_name='configentity',
            name='categories',
            field=models.ManyToManyField(to='main.category'),
        ),
        migrations.AddField(
            model_name='configentity',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='config_entity_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='configentity',
            name='origin_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.configentity'),
        ),
        migrations.AddField(
            model_name='configentity',
            name='parent_config_entity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent_set', to='main.configentity'),
        ),
        migrations.AddField(
            model_name='configentity',
            name='updater',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='config_entity_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analysistool',
            name='config_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.configentity'),
        ),
        migrations.CreateModel(
            name='AnalysisModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('key', models.CharField(max_length=100)),
                ('started', models.DateField(null=True)),
                ('completed', models.DateField(null=True)),
                ('failed', models.DateField(null=True)),
                ('partner_description', models.TextField(null=True)),
                ('configuration', picklefield.fields.PickledObjectField(default={}, editable=False, null=True)),
                ('analysis_tools', models.ManyToManyField(to='main.analysistool')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='analysis_module_creator', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='analysis_module_updater', to=settings.AUTH_USER_MODEL)),
                ('config_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.configentity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DbEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('key', models.CharField(max_length=100)),
                ('group_permission_configuration', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('schema', models.CharField(max_length=100, null=True)),
                ('table', models.CharField(max_length=100, null=True)),
                ('srid', models.CharField(max_length=100, null=True)),
                ('source_db_entity_key', models.CharField(max_length=50, null=True)),
                ('feature_class_configuration', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('setup_percent_complete', models.IntegerField(default=100)),
                ('no_feature_class_configuration', models.BooleanField(default=False)),
                ('url', models.CharField(max_length=1000, null=True)),
                ('hosts', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('behavior_locked', models.BooleanField(default=False)),
                ('query', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('group_by', picklefield.fields.PickledObjectField(editable=False, null=True)),
                ('categories', models.ManyToManyField(to='main.category')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='db_entity_creator', to=settings.AUTH_USER_MODEL)),
                ('origin_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.dbentity')),
                ('updater', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='db_entity_updater', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(to='main.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DbEntityInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('config_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.configentity')),
                ('db_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.dbentity')),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.interest')),
            ],
        ),
        migrations.AddField(
            model_name='configentity',
            name='db_entities',
            field=models.ManyToManyField(through='main.DbEntityInterest', to='main.dbentity'),
        ),
        migrations.CreateModel(
            name='EnvironmentalConstraintPercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=8, default=1, max_digits=14, null=True)),
                ('priority', models.IntegerField(default=1, null=True)),
                ('db_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.dbentity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_template', models.BooleanField(default=False)),
                ('readonly', models.BooleanField(default=False)),
                ('attribute_groups', models.ManyToManyField(through='main.AttributeGroupConfiguration', to='main.attributegroup')),
                ('behavior', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.behavior')),
                ('db_entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.dbentity')),
                ('intersection', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feature_behavior', to='main.intersection')),
                ('tags', models.ManyToManyField(to='main.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='behavior',
            name='template_feature_behavior',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owning_behavior', to='main.featurebehavior'),
        ),
        migrations.AddField(
            model_name='attributegroupconfiguration',
            name='feature_behavior',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.featurebehavior'),
        ),
        migrations.CreateModel(
            name='GeoLibraryCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.dbentity')),
                ('geo_library', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.geolibrary')),
            ],
        ),
        migrations.AddField(
            model_name='geolibrary',
            name='entities',
            field=models.ManyToManyField(through='main.GeoLibraryCatalog', to='main.dbentity'),
        ),
        migrations.CreateModel(
            name='GeometryColumns',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('f_table_catalog', models.CharField(max_length=256)),
                ('f_table_schema', models.CharField(max_length=256)),
                ('f_table_name', models.CharField(max_length=256)),
                ('f_geometry_column', models.CharField(max_length=256)),
                ('coord_dimension', models.IntegerField()),
                ('srid', models.IntegerField()),
                ('type', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'geometry_columns',
                'unique_together': {('f_table_schema', 'f_table_name', 'f_geometry_column')},
            },
        ),
        migrations.CreateModel(
            name='GroupHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_hierarchies', to='main.configentity')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='group_hierarchy', to='auth.group')),
                ('superiors', models.ManyToManyField(null=True, related_name='subordinates', to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='InformationSchema',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('table_catalog', models.CharField(max_length=100)),
                ('table_schema', models.CharField(max_length=100)),
                ('table_name', models.CharField(max_length=100)),
                ('column_name', models.CharField(max_length=100)),
                ('data_type', models.CharField(max_length=100)),
                ('udt_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': '"information_schema"."columns"',
                'unique_together': {('column_name', 'udt_name')},
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashid', models.CharField(max_length=36, unique=True)),
                ('task_id', models.CharField(max_length=36)),
                ('type', models.CharField(max_length=32)),
                ('status', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('ended_on', models.DateTimeField(null=True)),
                ('data', models.TextField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('presentationmedium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.presentationmedium')),
            ],
            bases=('main.presentationmedium',),
        ),
        migrations.AddField(
            model_name='presentationmedium',
            name='db_entity_interest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.dbentityinterest'),
        ),
        migrations.AddField(
            model_name='presentationmedium',
            name='updater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='presentation_medium_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('presentation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.presentation')),
            ],
            bases=('main.presentation',),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('presentation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.presentation')),
            ],
            bases=('main.presentation',),
        ),
        migrations.AddField(
            model_name='presentation',
            name='config_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.configentity'),
        ),
        migrations.AddField(
            model_name='presentationmedium',
            name='medium',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.medium'),
        ),
        migrations.AddField(
            model_name='configentity',
            name='media',
            field=models.ManyToManyField(null=True, to='main.medium'),
        ),
        migrations.AddField(
            model_name='builtform',
            name='media',
            field=models.ManyToManyField(related_name='built_form_media', to='main.medium'),
        ),
        migrations.AddField(
            model_name='builtform',
            name='medium',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.medium'),
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('key', models.CharField(max_length=100)),
                ('schema', models.CharField(max_length=100, null=True)),
                ('values', picklefield.fields.PickledObjectField(editable=False)),
                ('policies', models.ManyToManyField(to='main.policy')),
                ('tags', models.ManyToManyField(to='main.tag')),
            ],
            bases=(models.Model, footprint.main.models.config.policy.PolicyLookup),
        ),
        migrations.CreateModel(
            name='PolicySet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=120, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('policies', models.ManyToManyField(to='main.policy')),
            ],
            bases=(footprint.main.models.config.policy.PolicyLookup, models.Model),
        ),
        migrations.AddField(
            model_name='configentity',
            name='policy_sets',
            field=models.ManyToManyField(to='main.policyset'),
        ),
        migrations.AddField(
            model_name='builtform',
            name='tags',
            field=models.ManyToManyField(to='main.tag'),
        ),
        migrations.AddField(
            model_name='behavior',
            name='tags',
            field=models.ManyToManyField(to='main.tag'),
        ),
        migrations.CreateModel(
            name='EnvironmentalConstraintUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
                ('db_entities', models.ManyToManyField(through='main.EnvironmentalConstraintPercent', to='main.dbentity')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.AddField(
            model_name='environmentalconstraintpercent',
            name='analysis_tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.environmentalconstraintupdatertool'),
        ),
        migrations.CreateModel(
            name='MergeUpdaterTool',
            fields=[
                ('analysistool_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.analysistool')),
                ('db_entity_key', models.CharField(blank=True, max_length=100, null=True)),
                ('target_config_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.configentity')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.analysistool',),
        ),
        migrations.CreateModel(
            name='PlacetypeComponentPercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=20, default=0, max_digits=21)),
                ('placetype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.placetype')),
                ('placetype_component', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.placetypecomponent')),
            ],
        ),
        migrations.AddField(
            model_name='placetype',
            name='placetype_components',
            field=models.ManyToManyField(through='main.PlacetypeComponentPercent', to='main.placetypecomponent'),
        ),
        migrations.CreateModel(
            name='PrimaryComponentPercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=20, default=0, max_digits=21)),
                ('placetype_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.placetypecomponent')),
                ('primary_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.primarycomponent')),
            ],
        ),
        migrations.AddField(
            model_name='placetypecomponent',
            name='primary_components',
            field=models.ManyToManyField(through='main.PrimaryComponentPercent', to='main.primarycomponent'),
        ),
        migrations.CreateModel(
            name='BaseScenario',
            fields=[
                ('scenario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.scenario')),
            ],
            bases=('main.scenario',),
        ),
        migrations.CreateModel(
            name='FutureScenario',
            fields=[
                ('scenario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.scenario')),
            ],
            bases=('main.scenario',),
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('presentationmedium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.presentationmedium')),
                ('create_from_selection', models.BooleanField(default=False)),
                ('active_style_key', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('origin_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.layer')),
            ],
            bases=('main.presentationmedium', models.Model),
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('result_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.result')),
            ],
            bases=('main.result',),
        ),
        migrations.CreateModel(
            name='Grid',
            fields=[
                ('result_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.result')),
            ],
            bases=('main.result',),
        ),
        migrations.CreateModel(
            name='LayerLibrary',
            fields=[
                ('presentation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.presentation')),
                ('layers', models.ManyToManyField(related_name='layer_libraries', to='main.layer')),
            ],
            bases=('main.presentation',),
        ),
        migrations.CreateModel(
            name='ResultLibrary',
            fields=[
                ('presentation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.presentation')),
                ('results', models.ManyToManyField(related_name='result_libraries', to='main.result')),
            ],
            bases=('main.presentation',),
        ),
        migrations.CreateModel(
            name='LayerStyle',
            fields=[
                ('medium_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.medium')),
                ('geometry_type', models.CharField(blank=True, max_length=200, null=True)),
                ('html_class', models.CharField(blank=True, max_length=200, null=True)),
                ('style_attributes', models.ManyToManyField(null=True, to='main.styleattribute')),
            ],
            bases=('main.medium',),
        ),
        migrations.CreateModel(
            name='UrbanPlacetype',
            fields=[
                ('placetype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.placetype')),
                ('intersection_density', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('building_attribute_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.buildingattributeset')),
                ('street_attributes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.streetattributeset')),
            ],
            options={
                'verbose_name_plural': 'Urban Place Types',
                'abstract': False,
            },
            bases=('main.placetype', models.Model),
        ),
        migrations.CreateModel(
            name='BuildingType',
            fields=[
                ('placetypecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.placetypecomponent')),
                ('building_attribute_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.buildingattributeset')),
            ],
            bases=('main.placetypecomponent', models.Model),
        ),
        migrations.CreateModel(
            name='CropType',
            fields=[
                ('placetypecomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.placetypecomponent')),
                ('agriculture_attribute_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.agricultureattributeset')),
            ],
            bases=('main.placetypecomponent', models.Model),
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('primarycomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.primarycomponent')),
                ('building_attribute_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.buildingattributeset')),
            ],
            bases=('main.primarycomponent', models.Model),
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('primarycomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.primarycomponent')),
                ('agriculture_attribute_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.agricultureattributeset')),
            ],
            bases=('main.primarycomponent', models.Model),
        ),
    ]
